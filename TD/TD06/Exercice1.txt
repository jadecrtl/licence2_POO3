Exo 1:

1)On ne peut ni instancier une interface ni une classe abstraite.

2)On ne peut pas mettre de constructeur dans une interface mais on peut dans une classe abstraite.
On peut y mettre un constructeur avec un corps et donc un bloc, exemple :
class Test {
    for (int i=0; i<3; i++) {
        System.out.println(i);
    }

    public static void main (String[] args) {
        Test();
        ("Affiche : 0, 1, 2)
    }
}

3)  - Si A est une classe abstraite, étendue par la classe B -> oui, si B n'est pas abstraite.
    - Si A est une interface, implémentée par une classe B -> oui.

4)Les interfaces ne peuvent contenir que des attributs constants de classe (static et final).
Les modificateurs sont implicites.
Il faut les initialiser pour les interfaces.
On ne peut pas réduire la visibilité des méthodes! Liberté pour les classes abstraites.

5)              |  abstrait            |  non abstrait        |  static abstrait
______________________________________________________________________________________

interfaces      |        oui           |   static/default     |    non                 
                |                      |(mm pour tt la classe)|                 
______________________________________________________________________________________

class abstraite |        oui           | tt sauf default      |    non
                |                      |                      |                 

Attention!!! L'interface n'hérite pas des méthodes static alors que les classes abstraites les héritent

6)Une interface peut hériter d'une autre interface et une interface...
ne peut pas hériter d'une autre classe abstraite

7)Une classe abstraite peut hériter d'une classe abstraite. Non une classe abstraite implément une interface.
(On hérite pour les classes, et on implément pour les interfaces mais c'est la même chose dans les faits.)
